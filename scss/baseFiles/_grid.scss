@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
  "0": 0,
  "1": 5px,
  "2": 10px,
  "3": 15px,
  "4": 20px,
  "5": 30px,
);

$justify-content-values: flex-start, flex-end, center, space-between,
  space-around;
$align-items-values: stretch, center, start, end;

//base layout classes
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}
.row {
  display: flex;
  flex-flow: row wrap;
}

//justify content classes
@each $val in $justify-content-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

//align items classes
@each $val in $align-items-values {
  .align-#{$val} {
    align-items: $val;
  }
}

//grid gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} {
    gap: $val;
  }
}

//col classes
@include bp-xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include bp-sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include bp-md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include bp-lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include bp-xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
